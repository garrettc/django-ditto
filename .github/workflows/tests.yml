
name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: "Python ${{ matrix.python-version }}, Django ${{ matrix.django-version}}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        django-version: ["2.2", "3.1", "3.2"]
        # If we wanted to exclude combinations, we could add them here:
        # exclude:
          # - python-version: "3.5"
          #   django-version: "3.0"

    steps:
      - name: Git clone
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ matrix.python-version }}-v1-${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-v1-

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade coveralls tox tox-gh-actions

      - name: Test with Tox
        run: tox -v
        env:
          DJANGO: ${{ matrix.django-version }}

      - name: Run coveralls
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # The flake8 test in tox.ini won't run with the test job so we need to add it here.
  lint:
    name: "Lint: ${{ matrix.toxenv }}"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - flake8

    steps:
      - name: Git clone
        uses: actions/checkout@v2

      - name: Set up Python ${{ env.default_python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python }}

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-v1-${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.toxenv }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Run ${{ matrix.toxenv }}
        run: python -m tox -v -e ${{ matrix.toxenv }}

  slack:
    # https://github.com/8398a7/action-slack/issues/72#issuecomment-649910353
    name: Slack notification
    runs-on: ubuntu-latest
    needs: [test, lint]

    # this is required, otherwise it gets skipped if any needed jobs fail.
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idneeds
    if: always()  # Pick up events even if the job fails or is cancelled.

    steps:
      - uses: technote-space/workflow-conclusion-action@v1

      - name: Send Slack notification
        uses: 8398a7/action-slack@v2
        # if: env.WORKFLOW_CONCLUSION == 'failure'
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          # fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
          fields: repo,message,commit,author,action,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTIONS_CI_SLACK_HOOK }}
